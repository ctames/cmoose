INPUT
1. program written in binary or asm, comments allowed, one instruction per line, no error handling
2. mode: step or run 
	a. if run, specify number of seconds
3. config - if not default cycles per instr desired, provide config

OUTPUT

|		IF		|		ID		|		EX		|		MEM		|		WB		|

Instr
#CyclesElapsed/CyclesTotal
!CauseDependencyWith
!DependingOn

PROCEDURE

1. take in .b or .asm file, parse appropriate into a PROGRAM of SEQUENTIALLY LABELLED INSTRUCTIONS
2. if non default config, pase config file, set cycles for each instruction
3. starting from instruction 0, execute program cycle by cycle, printing output (state of pipelined execution, ie
	where each instruction is [see OUTPUT]) 
